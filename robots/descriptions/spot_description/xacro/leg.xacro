<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- <xacro:include filename="$(find go2_description)/xacro/transmission.xacro"/> -->
    <xacro:include filename="$(find go2_description)/xacro/const.xacro"/>


    <xacro:property name="base_to_front_left_hip_xyz"       value="${base_to_hip_x} ${base_to_hip_y} 0" />
    <xacro:property name="hip_to_front_left_upper_leg_xyz"  value="0 ${hip_to_upper_leg_y} 0" />
    <xacro:property name="base_to_front_right_hip_xyz"      value="${base_to_hip_x} -${base_to_hip_y} 0" />
    <xacro:property name="hip_to_front_right_upper_leg_xyz" value="0 -${hip_to_upper_leg_y} 0" />
    <xacro:property name="base_to_rear_left_hip_xyz"        value="-${base_to_hip_x} ${base_to_hip_y} 0" />
    <xacro:property name="hip_to_rear_left_upper_leg_xyz"   value="0 ${hip_to_upper_leg_y} 0" />
    <xacro:property name="base_to_rear_right_hip_xyz"       value="-${base_to_hip_x} -${base_to_hip_y} 0" />
    <xacro:property name="hip_to_rear_right_upper_leg_xyz"  value="0 -${hip_to_upper_leg_y} 0" />
    <!-- foot -->
    <xacro:property name="foot_radius" value="0.02"/>
    <xacro:property name="foot_mass" value="0.06"/>


    <xacro:macro name="leg" params="name mirror mirror_dae front_hind front_hind_dae">

        <joint name="${name}_hip_joint" type="revolute">
            <xacro:if value="${(mirror_dae == False) and (front_hind_dae == True)}">
                <!-- <origin rpy="0 0 0" xyz="${leg_offset_x} ${-leg_offset_y} 0"/> -->
                <origin rpy="0 0 0" xyz="${base_to_hip_x} ${-base_to_hip_y} 0"/> 
            </xacro:if>
            <xacro:if value="${(mirror_dae == True) and (front_hind_dae == True)}">
                <!-- <origin rpy="0 0 0" xyz="${leg_offset_x} ${leg_offset_y} 0"/> -->
                <origin rpy="0 0 0" xyz="${base_to_hip_x} ${base_to_hip_y} 0"/> 
            </xacro:if>
            <xacro:if value="${(mirror_dae == False) and (front_hind_dae == False)}">
                <!-- <origin rpy="0 0 0" xyz="${-leg_offset_x} ${-leg_offset_y} 0"/> -->
                <origin rpy="0 0 0" xyz="${-base_to_hip_x} ${-base_to_hip_y} 0"/> 
            </xacro:if>
            <xacro:if value="${(mirror_dae == True) and (front_hind_dae == False)}">
                <!-- <origin rpy="0 0 0" xyz="${-leg_offset_x} ${leg_offset_y} 0"/> -->
                <origin rpy="0 0 0" xyz="${-base_to_hip_x} ${base_to_hip_y} 0"/> 
            </xacro:if>
            <parent link="trunk"/>
            <child link="${name}_hip_link"/>
            <axis xyz="1 0 0"/>
            <!-- <dynamics damping="${damping}" friction="${friction}"/> -->
            <xacro:if value="${(mirror_dae == True)}">
                <limit effort="100" velocity="100.00" lower="-0.78539816339744827899" upper="0.78539816339744827899"/>
            </xacro:if>
            <xacro:if value="${(mirror_dae == False)}">
                <limit effort="100" velocity="100.00" lower="-0.78539816339744827899" upper="0.78539816339744827899"/>
            </xacro:if>            
        </joint>


        <link name="${name}_hip_link">
            <visual>
                <xacro:if value="${(mirror_dae == True) and (front_hind_dae == True)}">
                    <origin rpy="0 0 0" xyz="0 0 0"/>
                </xacro:if>
                <xacro:if value="${(mirror_dae == False) and (front_hind_dae == True)}">
                    <origin rpy="${PI} 0 0" xyz="0 0 0"/>
                </xacro:if>
                <xacro:if value="${(mirror_dae == True) and (front_hind_dae == False)}">
                    <origin rpy="0 ${PI} 0" xyz="0 0 0"/>
                </xacro:if>
                <xacro:if value="${(mirror_dae == False) and (front_hind_dae == False)}">
                    <origin rpy="${PI} ${PI} 0" xyz="0 0 0"/>
                </xacro:if>
                <geometry>
                    <!-- <mesh filename="file://$(find go2_description)/meshes/hip.dae" scale="1 1 1"/> -->
                    <mesh filename="file://$(find spot_description)/meshes/front_left_hip.dae" scale="1 1 1"/>
                </geometry>
                <!-- <material name="orange"/> -->
            </visual>
            <collision>
                <!-- <origin rpy="${PI/2.0} 0 0" xyz="0 ${hip_offset*mirror} 0"/> -->
                <geometry>
                    <!-- <cylinder length="${hip_length}" radius="${hip_radius}"/> -->
                    <mesh filename="package://spot_description/meshes/front_left_hip_collision.stl" />
                </geometry>
            </collision>
            <inertial>
                <!-- <origin rpy="0 0 0" xyz="${hip_com_x*front_hind} ${hip_com_y*mirror} ${hip_com_z}"/>
                <mass value="${hip_mass}"/>
                <inertia
                    ixx="${hip_ixx}" ixy="${hip_ixy*mirror*front_hind}" ixz="${hip_ixz*front_hind}"
                    iyy="${hip_iyy}" iyz="${hip_iyz*mirror}"
                    izz="${hip_izz}"/>  -->
                <mass value="${hip_mass}"/>
                <inertia ixx="${(1/12) * hip_mass * (hip_width * hip_width + hip_height * hip_height)}" ixy="0.0" ixz="0.0"
                        iyy="${(1/12) * hip_mass * (hip_length * hip_length + hip_height * hip_height)}" iyz="0.0"
                        izz="${(1/12) * hip_mass * (hip_length * hip_length + hip_width * hip_width)}" />          
            </inertial>
        </link>

        <joint name="${name}_upper_leg_joint" type="revolute">
            <!-- <origin rpy="0 0 0" xyz="0 ${thigh_offset*mirror} 0"/> ${base_to_hip_x} ${base_to_hip_y}  -->
             <origin rpy="0 0 0" xyz="0 ${hip_to_upper_leg_y*mirror} 0"/>
            <parent link="${name}_hip_link"/>
            <child link="${name}_upper_leg_link"/>
            <axis xyz="0 1 0"/>
            <!-- <dynamics damping="${damping}" friction="${friction}"/> -->
            <limit effort="100" velocity="1000.00" lower="-0.89884456477707963539" upper="2.2951079663725435509"/>
        </joint> 


        <link name="${name}_upper_leg_link">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <xacro:if value="${mirror_dae == True}">
                        <!-- <mesh filename="file://$(find go2_description)/meshes/thigh.dae" scale="1 1 1"/> -->
                        <mesh filename="file://$(find spot_description)/meshes/front_left_upper_leg.dae" scale="1 1 1"/>
                    </xacro:if>
                    <xacro:if value="${mirror_dae == False}">
                        <!-- <mesh filename="file://$(find go2_description)/meshes/thigh_mirror.dae" scale="1 1 1"/> -->
                        <mesh filename="file://$(find spot_description)/meshes/front_right_upper_leg.dae" scale="1 1 1"/>
                    </xacro:if>
                </geometry>
                <!-- <material name="orange"/> -->
            </visual>
            <collision>
                <!-- <origin rpy="0 ${PI/2.0} 0" xyz="0 0 ${-thigh_length/2.0}"/> -->
                <!-- <origin rpy="0 (1.57-1.57*mirror) 0" xyz="0 0 0"/> -->
                <origin rpy="0 0 ${1.57-1.57*mirror}" xyz="0 0 0"/> 
                <geometry>
                    <!-- <box size="${thigh_length} ${thigh_width} ${thigh_height}"/> -->
                    <mesh filename="package://spot_description/meshes/front_left_upper_leg_collision.stl" scale="0.82 0.97 0.98"/>
                </geometry>      
            </collision>
            <inertial>
                <!-- <origin rpy="0 0 0" xyz="${thigh_com_x} ${thigh_com_y*mirror} ${thigh_com_z}"/>
                <mass value="${thigh_mass}"/>
                <inertia
                    ixx="${thigh_ixx}" ixy="${thigh_ixy*mirror}" ixz="${thigh_ixz}"
                    iyy="${thigh_iyy}" iyz="${thigh_iyz*mirror}"
                    izz="${thigh_izz}"/>     -->
                 <origin xyz="0 0 -0.14" rpy="0 0 0" />
                <mass value="${upper_leg_mass}"/>
                <inertia ixx="${(1/12) * upper_leg_mass * (upper_leg_width * upper_leg_width + upper_leg_height * upper_leg_height)}" ixy="0.0" ixz="0.0"
                            iyy="${(1/12) * upper_leg_mass * (upper_leg_length * upper_leg_length + upper_leg_height * upper_leg_height)}" iyz="0.0"
                            izz="${(1/12) * upper_leg_mass * (upper_leg_length * upper_leg_length + upper_leg_width * upper_leg_width)}" />     
           </inertial>
        </link>


        <joint name="${name}_lower_leg_joint" type="revolute">
            <!-- <origin rpy="0 0 0" xyz="0 0 ${-thigh_length}"/> -->
            <origin xyz="${upper_leg_to_lower_leg_x} 0 -${upper_leg_to_lower_leg_z}" rpy="0 0 0" />

            <parent link="${name}_upper_leg_link"/>
            <child link="${name}_lower_leg_link"/>
            <axis xyz="0 1 0"/>
            <dynamics damping="${damping}" friction="${friction}"/>
            <limit effort="100" velocity="1000.00" lower="-2.7929" upper="-0.254801"/>
        </joint>


        <link name="${name}_lower_leg_link">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <!-- <mesh filename="file://$(find go2_description)/meshes/calf.dae" scale="1 1 1"/> -->
                    <mesh filename="file://$(find spot_description)/meshes/front_left_lower_leg.dae" scale="1 1 1"/>
                </geometry>
                <!-- <material name="orange"/> -->
            </visual>
            <collision>
                <!-- <origin rpy="0 ${PI/2.0} 0" xyz="0 0 ${-calf_length/2.0}"/> -->

                <geometry>
                    <!-- <box size="${calf_length} ${calf_width} ${calf_height}"/> -->
                    <mesh filename="file://$(find spot_description)/meshes/front_left_lower_leg_collision.stl" scale="1 1 1"/>
                </geometry>      
            </collision>
            <inertial>
                <!-- <origin rpy="0 0 0" xyz="${calf_com_x} ${calf_com_y} ${calf_com_z}"/>
                <mass value="${calf_mass}"/>
                <inertia
                    ixx="${calf_ixx}" ixy="${calf_ixy}" ixz="${calf_ixz}"
                    iyy="${calf_iyy}" iyz="${calf_iyz}"
                    izz="${calf_izz}"/>       
            </inertial> -->
                <origin xyz="0 0 -0.16" rpy="0 0 0" />
                <mass value="${lower_leg_mass}"/>
                <inertia ixx="${(1/12) * lower_leg_mass * (lower_leg_width * lower_leg_width + lower_leg_height * lower_leg_height)}" ixy="0.0" ixz="0.0"
                            iyy="${(1/12) * lower_leg_mass * (lower_leg_length * lower_leg_length + lower_leg_height * lower_leg_height)}" iyz="0.0"
                            izz="${(1/12) * lower_leg_mass * (lower_leg_length * lower_leg_length + lower_leg_width * lower_leg_width)}" />     
            </inertial>
        </link>


        <joint name="${name}_foot_joint" type="fixed">
            <!-- <origin rpy="0 0 0" xyz="0 0 ${-(calf_length)}"/> -->
            <origin rpy="0 0 0" xyz="0 0 -${lower_leg_to_foot_z}"/>
            <parent link="${name}_lower_leg_link"/>
            <child link="${name}_foot_link"/>
        </joint>

        <link name="${name}_foot_link">
            <visual>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <sphere radius="${foot_radius-0.01}"/>
                </geometry>
            </visual>
            <collision>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <geometry>
                    <sphere radius="${foot_radius}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="${foot_mass}"/>
                <inertia
                    ixx="${(2*foot_mass)/5.0*(foot_radius*foot_radius)}" ixy="0.0" ixz="0.0"
                    iyy="${(2*foot_mass)/5.0*(foot_radius*foot_radius)}" iyz="0.0"
                    izz="${(2*foot_mass)/5.0*(foot_radius*foot_radius)}"/>             
            </inertial>
        </link>
        
        <ros2_control name="${name}" type="system">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>
            <joint name="${name}_hip_joint">
                <command_interface name="effort">
                    <param name="min">-100</param>
                    <param name="max">100</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        
            <joint name="${name}_upper_leg_joint">
                <command_interface name="effort">
                    <param name="min">-100</param>
                    <param name="max">100</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        
            <joint name="${name}_lower_leg_joint">
                <command_interface name="effort">
                    <param name="min">-100</param>
                    <param name="max">100</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control> 

        <!-- <xacro:leg_transmission name="${name}"/> -->

    </xacro:macro>
</robot>
